{"ast":null,"code":"import \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/* eslint-disable */\nconst userSystem = \"PodcastApp\";\nconsole.log('running script utils.js');\nconst currentDate = Math.floor(Date.now() / 1000);\nconst authKey = '8YERZRSEJBTHAAASUDXK';\nconst apiSecret = 'pfSK93B7xjh5FHXKdnStQxNk7qrgXzKBNUgxS72u';\nconst authDate = currentDate;\nconst concat = authKey + apiSecret + currentDate;\nasync function sha1EncryptionInHexFormat(str) {\n  const buffer = new TextEncoder(\"utf-8\").encode(str);\n  const digest = await crypto.subtle.digest(\"SHA-1\", buffer);\n  // Convert digest to hex string\n  const result = Array.from(new Uint8Array(digest)).map(x => x.toString(16).padStart(2, \"0\")).join(\"\");\n  return result;\n}\nasync function podcastIndexAPI(fullURL) {\n  console.log(`Podcast index API: fetching results for \"${fullURL}\"`);\n  let signature = await sha1EncryptionInHexFormat(concat);\n  return fetch(fullURL, {\n    headers: {\n      \"X-Auth-Date\": authDate,\n      \"X-Auth-Key\": authKey,\n      Authorization: signature,\n      \"User-Agent\": userSystem\n    }\n  }).then(response => response.json()).catch(error => {\n    console.error(\"CHECK YOUR API CREDENTIALS\");\n    console.error(\"Error:\", error);\n  });\n}\nexport async function podcastIndexSearchAPI(query, maxResults) {\n  console.log('podcastIndexApi');\n  const encodedQuery = encodeURIComponent(query);\n  let fullRequestURL = `https://api.podcastindex.org/api/1.0/search/byterm?q=${encodedQuery}&max=${maxResults}`;\n  return podcastIndexAPI(fullRequestURL);\n}\nexport async function podcastIndexTrendingAPI(maxResults, categories) {\n  let catList = categories.join(',');\n  let language = navigator.language;\n  let fullRequestURL = `https://api.podcastindex.org/api/1.0/podcasts/trending?pretty&max=${maxResults}&lang=${language}&cat=${catList}`;\n  return podcastIndexAPI(fullRequestURL);\n}\n\n// export astync function podcastIndexByID (){\n// ...\n// }","map":{"version":3,"names":["userSystem","console","log","currentDate","Math","floor","Date","now","authKey","apiSecret","authDate","concat","sha1EncryptionInHexFormat","str","buffer","TextEncoder","encode","digest","crypto","subtle","result","Array","from","Uint8Array","map","x","toString","padStart","join","podcastIndexAPI","fullURL","signature","fetch","headers","Authorization","then","response","json","catch","error","podcastIndexSearchAPI","query","maxResults","encodedQuery","encodeURIComponent","fullRequestURL","podcastIndexTrendingAPI","categories","catList","language","navigator"],"sources":["/Users/uni/VSCode/VUE/5 Vue Results Page/my_project/src/podcastIndexAPIs.js"],"sourcesContent":["/* eslint-disable */\nconst userSystem = \"PodcastApp\";\n\nconsole.log('running script utils.js');\n\nconst currentDate = Math.floor(Date.now() / 1000);\nconst authKey = '8YERZRSEJBTHAAASUDXK';\nconst apiSecret = 'pfSK93B7xjh5FHXKdnStQxNk7qrgXzKBNUgxS72u'\nconst authDate = currentDate;\nconst concat = authKey + apiSecret + currentDate;\n\nasync function sha1EncryptionInHexFormat(str) {\n  const buffer = new TextEncoder(\"utf-8\").encode(str);\n  const digest = await crypto.subtle.digest(\"SHA-1\", buffer);\n  // Convert digest to hex string\n  const result = Array.from(new Uint8Array(digest))\n    .map((x) => x.toString(16).padStart(2, \"0\"))\n    .join(\"\");\n  return result;\n}\n\nasync function podcastIndexAPI(fullURL) {\n  console.log(`Podcast index API: fetching results for \"${fullURL}\"`);\n  let signature = await sha1EncryptionInHexFormat(concat);\n  return fetch(fullURL, {\n    headers: {\n      \"X-Auth-Date\": authDate,\n      \"X-Auth-Key\": authKey,\n      Authorization: signature,\n      \"User-Agent\": userSystem,\n    },\n  })\n    .then((response) => response.json())\n\n    .catch((error) => {\n      console.error(\"CHECK YOUR API CREDENTIALS\");\n      console.error(\"Error:\", error);\n    });\n}\n\nexport async function podcastIndexSearchAPI(query, maxResults) {\n  console.log('podcastIndexApi');\n  const encodedQuery = encodeURIComponent(query);\n  let fullRequestURL = `https://api.podcastindex.org/api/1.0/search/byterm?q=${encodedQuery}&max=${maxResults}`;\n  return podcastIndexAPI(fullRequestURL);\n}\n\nexport async function podcastIndexTrendingAPI(maxResults, categories) {\n  let catList = categories.join(',');\n  let language = navigator.language;\n  let fullRequestURL = `https://api.podcastindex.org/api/1.0/podcasts/trending?pretty&max=${maxResults}&lang=${language}&cat=${catList}`;\n  return podcastIndexAPI(fullRequestURL);\n}\n\n// export astync function podcastIndexByID (){\n  // ...\n// }"],"mappings":";;;;;;AAAA;AACA,MAAMA,UAAU,GAAG,YAAY;AAE/BC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;AAEtC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;AACjD,MAAMC,OAAO,GAAG,sBAAsB;AACtC,MAAMC,SAAS,GAAG,0CAA0C;AAC5D,MAAMC,QAAQ,GAAGP,WAAW;AAC5B,MAAMQ,MAAM,GAAGH,OAAO,GAAGC,SAAS,GAAGN,WAAW;AAEhD,eAAeS,yBAAyBA,CAACC,GAAG,EAAE;EAC5C,MAAMC,MAAM,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC,CAACC,MAAM,CAACH,GAAG,CAAC;EACnD,MAAMI,MAAM,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACF,MAAM,CAAC,OAAO,EAAEH,MAAM,CAAC;EAC1D;EACA,MAAMM,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,UAAU,CAACN,MAAM,CAAC,CAAC,CAC9CO,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAC3CC,IAAI,CAAC,EAAE,CAAC;EACX,OAAOR,MAAM;AACf;AAEA,eAAeS,eAAeA,CAACC,OAAO,EAAE;EACtC7B,OAAO,CAACC,GAAG,CAAE,4CAA2C4B,OAAQ,GAAE,CAAC;EACnE,IAAIC,SAAS,GAAG,MAAMnB,yBAAyB,CAACD,MAAM,CAAC;EACvD,OAAOqB,KAAK,CAACF,OAAO,EAAE;IACpBG,OAAO,EAAE;MACP,aAAa,EAAEvB,QAAQ;MACvB,YAAY,EAAEF,OAAO;MACrB0B,aAAa,EAAEH,SAAS;MACxB,YAAY,EAAE/B;IAChB;EACF,CAAC,CAAC,CACCmC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAEnCC,KAAK,CAAEC,KAAK,IAAK;IAChBtC,OAAO,CAACsC,KAAK,CAAC,4BAA4B,CAAC;IAC3CtC,OAAO,CAACsC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAChC,CAAC,CAAC;AACN;AAEA,OAAO,eAAeC,qBAAqBA,CAACC,KAAK,EAAEC,UAAU,EAAE;EAC7DzC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC9B,MAAMyC,YAAY,GAAGC,kBAAkB,CAACH,KAAK,CAAC;EAC9C,IAAII,cAAc,GAAI,wDAAuDF,YAAa,QAAOD,UAAW,EAAC;EAC7G,OAAOb,eAAe,CAACgB,cAAc,CAAC;AACxC;AAEA,OAAO,eAAeC,uBAAuBA,CAACJ,UAAU,EAAEK,UAAU,EAAE;EACpE,IAAIC,OAAO,GAAGD,UAAU,CAACnB,IAAI,CAAC,GAAG,CAAC;EAClC,IAAIqB,QAAQ,GAAGC,SAAS,CAACD,QAAQ;EACjC,IAAIJ,cAAc,GAAI,qEAAoEH,UAAW,SAAQO,QAAS,QAAOD,OAAQ,EAAC;EACtI,OAAOnB,eAAe,CAACgB,cAAc,CAAC;AACxC;;AAEA;AACE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}