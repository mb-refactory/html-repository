{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"alert alert-success m-5\"\n}, \"Pagina dei risultati:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container-grid m-4\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PodcastCard = _resolveComponent(\"PodcastCard\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"h2\", null, \"Risultati della ricerca per \\\"\" + _toDisplayString(_ctx.$route.params.searchTerm) + \"\\\":\", 1 /* TEXT */), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.podcasts, podcast => {\n    return _openBlock(), _createBlock(_component_PodcastCard, {\n      key: podcast.id,\n      podcastInfo: podcast\n    }, null, 8 /* PROPS */, [\"podcastInfo\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_2]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_toDisplayString","_ctx","$route","params","searchTerm","_Fragment","_renderList","podcasts","podcast","_createBlock","_component_PodcastCard","key","id","podcastInfo","_hoisted_2"],"sources":["/Users/uni/VSCode/VUE/5 Vue Results Page/my_project/src/views/ResultsView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1 class=\"alert alert-success m-5\">Pagina dei risultati:</h1>\n    <h2>Risultati della ricerca per \"{{ $route.params.searchTerm }}\":</h2>\n    <div>\n      <PodcastCard v-for=\"podcast in podcasts\" :key=\"podcast.id\" :podcastInfo=\"podcast\"/>\n    </div>\n    <div class=\"container-grid m-4\"></div>\n  </div>\n</template>\n<script>\nimport { podcastIndexSearchAPI, updateGrid } from '../utils.js'\nimport PodcastCard from '../components/PodcastCard.vue'\nexport default {\n  components: {\n    PodcastCard\n  },\n  methods: {\n    handleSearch (searchTerms) {\n      console.log('Ricerca con i termini:', searchTerms)\n    }\n  },\n  mounted () {\n    const searchTerm = this.$route.params.searchTerm\n    podcastIndexSearchAPI(searchTerm, 12).then((data) => {\n      updateGrid(data.feeds, 'suggested')\n    })\n  }\n}\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAA8D;EAA1DC,KAAK,EAAC;AAAyB,GAAC,uBAAqB;gCAKzDD,mBAAA,CAAsC;EAAjCC,KAAK,EAAC;AAAoB;;;uBANjCC,mBAAA,CAOM,cANJC,UAA8D,EAC9DH,mBAAA,CAAsE,YAAlE,gCAA6B,GAAAI,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,UAAU,IAAG,KAAE,iBACjER,mBAAA,CAEM,e,kBADJE,mBAAA,CAAmFO,SAAA,QALzFC,WAAA,CAKqCL,IAAA,CAAAM,QAAQ,EAAnBC,OAAO;yBAA3BC,YAAA,CAAmFC,sBAAA;MAAzCC,GAAG,EAAEH,OAAO,CAACI,EAAE;MAAGC,WAAW,EAAEL;;oCAE3EM,UAAsC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}