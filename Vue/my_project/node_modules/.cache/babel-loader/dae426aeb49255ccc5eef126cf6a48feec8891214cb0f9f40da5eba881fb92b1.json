{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"alert alert-success m-5\"\n}, \"Pagina dei risultati\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"container-grid\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"h2\", null, \"Risultati della ricerca per \\\"\" + _toDisplayString(_ctx.$route.params.searchTerm) + \"\\\":\", 1 /* TEXT */), _hoisted_2]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_toDisplayString","_ctx","$route","params","searchTerm","_hoisted_2"],"sources":["/Users/uni/VSCode/VUE/4 Vue CLI/my_project/src/views/ResultsView.vue"],"sourcesContent":["<template>\n    <div>\n    <h1 class=\"alert alert-success m-5\">Pagina dei risultati</h1>\n    <h2>Risultati della ricerca per \"{{ $route.params.searchTerm }}\":</h2>\n    <div class=\"container-grid\"></div>\n  </div>\n</template>\n<script>\nimport { podcastIndexSearchAPI, updateGrid, showLoadingSpinner } from '../utils.js'\nexport default {\n  components: {\n  },\n  methods: {\n    handleSearch (searchTerms) {\n      console.log('Ricerca con i termini:', searchTerms)\n    }\n  },\n  mounted () {\n    const searchTerm = this.$route.params.searchTerm\n    showLoadingSpinner()\n    podcastIndexSearchAPI(searchTerm, 12).then((data) => {\n      console.log(data)\n      // updateGrid(data.feeds, 'suggested')\n    })\n  }\n}\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAA6D;EAAzDC,KAAK,EAAC;AAAyB,GAAC,sBAAoB;gCAExDD,mBAAA,CAAkC;EAA7BC,KAAK,EAAC;AAAgB;;uBAH3BC,mBAAA,CAII,cAHJC,UAA6D,EAC7DH,mBAAA,CAAsE,YAAlE,gCAA6B,GAAAI,gBAAA,CAAGC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,UAAU,IAAG,KAAE,iBACjEC,UAAkC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}