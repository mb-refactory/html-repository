{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"alert alert-success m-5\"\n}, \"Pagina delle iscrizioni\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"fw-bold mx-2\"\n}, \"Ecco i podast a cui sei iscritto:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"row mx-4 my-4\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PodcastCard = _resolveComponent(\"PodcastCard\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _hoisted_2, _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.podcasts, podcast => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col-lg-6 col-md-12 fade-in\",\n      key: podcast.id\n    }, [_createVNode(_component_PodcastCard, {\n      podcastInfo: podcast\n    }, null, 8 /* PROPS */, [\"podcastInfo\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","podcasts","podcast","key","id","_createVNode","_component_PodcastCard","podcastInfo"],"sources":["/Users/uni/VSCode/VUE/5 Vue Results Page/my_project/src/views/SubscribedView.vue"],"sourcesContent":["<template>\n  <div>\n    <h1 class=\"alert alert-success m-5\">Pagina delle iscrizioni</h1>\n    <h2 class=\"fw-bold mx-2\">Ecco i podast a cui sei iscritto:</h2>\n    <p></p>\n    <div class=\"row mx-4 my-4\">\n        <div class=\"col-lg-6 col-md-12 fade-in\" v-for=\"podcast in podcasts\" :key=\"podcast.id\">\n          <PodcastCard :podcastInfo=\"podcast\" />\n        </div>\n      </div>\n  </div>\n</template>\n<script>\n// import { podcastIndexByID } from '../podcastIndexAPIs.js'\nimport PodcastCard from '../components/PodcastCard.vue'\nexport default {\n  components: {\n    PodcastCard\n  },\n  data () {\n    return {\n      podcasts: []\n    }\n  }\n  // mounted () {\n  //   podcastIndexByID(20, []).then((data) => {\n  //     this.podcasts = data.feeds\n  //   })\n  // }\n}\n</script>\n"],"mappings":";gCAEIA,mBAAA,CAAgE;EAA5DC,KAAK,EAAC;AAAyB,GAAC,yBAAuB;gCAC3DD,mBAAA,CAA+D;EAA3DC,KAAK,EAAC;AAAc,GAAC,mCAAiC;gCAC1DD,mBAAA,CAAO;;EACFC,KAAK,EAAC;AAAe;;;uBAJ5BC,mBAAA,CASM,cARJC,UAAgE,EAChEC,UAA+D,EAC/DC,UAAO,EACPL,mBAAA,CAIQ,OAJRM,UAIQ,I,kBAHJJ,mBAAA,CAEMK,SAAA,QARdC,WAAA,CAMkEC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBAAtDT,mBAAA,CAEM;MAFDD,KAAK,EAAC,4BAA4B;MAA8BW,GAAG,EAAED,OAAO,CAACE;QAChFC,YAAA,CAAsCC,sBAAA;MAAxBC,WAAW,EAAEL;IAAO,yC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}